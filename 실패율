// 실패율
// 2021-08-30

#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

bool compare(pair<double, int> a, pair<double, int> b) {
    if(a.first == b.first)
        return a.second < b.second;
    
    else
        return a.first > b.first;
}

vector<int> solution(int N, vector<int> stages) {
    vector<int> answer;
    int users[501] = {0};
    int usersize = stages.size();
    vector<pair<double, int>> fail;
    
    for(vector<int>::iterator it = stages.begin(); it != stages.end(); it++) {
        users[*it - 1]++; //stages 1 ~ N+1까지 -> 0 ~ N까지로
    }
    
    for(int i = 0; i < N; i++) {
        if(users[i] == 0) {
            fail.push_back(make_pair(0, i + 1));
        }
        else {
            fail.push_back(make_pair((double)users[i]/usersize, i + 1)); //0 ~ N -> 1 ~ N+1
            usersize -= users[i];
        }
    }
    
    sort(fail.begin(), fail.end(), compare);
    
    for(vector<pair<double, int>>::iterator it = fail.begin(); it != fail.end(); it++) {
        answer.push_back(it->second);
    }
    
    return answer;
}
