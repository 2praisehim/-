// 기능개발
// 먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때
// 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.
// 2022-01-02

#include <string>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

vector<int> solution(vector<int> progresses, vector<int> speeds) {
    vector<int> answer;
    int give = 0;
    
    reverse(progresses.begin(), progresses.end());
    reverse(speeds.begin(), speeds.end());
    
    while(!progresses.empty()) {
        if(progresses.back() >= 100) {
            progresses.pop_back();
            speeds.pop_back();
            give++;
        }
        else {
            if(give != 0) {
                answer.push_back(give);
                give = 0;
            }
            
            for(int i = 0; i < progresses.size(); i++) {
                progresses[i] += speeds[i];
            }
        }
    }
    
    if(give != 0) {
        answer.push_back(give);
        give = 0;
    }
    
    return answer;
}
